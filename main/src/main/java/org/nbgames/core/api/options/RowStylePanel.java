/* 
 * Copyright 2018 Patrik Karlström.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.nbgames.core.api.options;

import java.awt.Color;
import java.awt.Point;
import javax.swing.JColorChooser;
import org.nbgames.core.api.ui.DialogButtonManager;
import se.trixon.almond.util.Dict;

/**
 *
 * @author Patrik Karlström
 */
public class RowStylePanel extends javax.swing.JPanel {

    private final DialogButtonManager mButtonManager = DialogButtonManager.getInstance();

    /**
     * Creates new form RowStylePanel
     */
    private RowStyle mRowStyle;

    public RowStylePanel(String title) {
        initComponents();
        label.setText(title);
        label.setBackground(Color.YELLOW);
    }

//    public RowStylePanel(RowStyle rowStyle) {
//        initComponents();
//        mRowStyle = rowStyle;
//    }
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        popupMenu = new javax.swing.JPopupMenu();
        backgroundColorMenuItem = new javax.swing.JMenuItem();
        textColorMenuItem = new javax.swing.JMenuItem();
        separator = new javax.swing.JPopupMenu.Separator();
        fontMenuItem = new javax.swing.JMenuItem();
        label = new javax.swing.JLabel();
        button = new javax.swing.JButton();

        backgroundColorMenuItem.setText(Dict.BACKGROUND_COLOR.toString()+"...");
        backgroundColorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backgroundColorMenuItemActionPerformed(evt);
            }
        });
        popupMenu.add(backgroundColorMenuItem);

        textColorMenuItem.setText(Dict.TEXT_COLOR.toString()+"...");
        textColorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textColorMenuItemActionPerformed(evt);
            }
        });
        popupMenu.add(textColorMenuItem);
        popupMenu.add(separator);

        fontMenuItem.setText(Dict.FONT.toString()+"...");
        fontMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontMenuItemActionPerformed(evt);
            }
        });
        popupMenu.add(fontMenuItem);

        setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 8, 4, 8));
        setLayout(new java.awt.GridBagLayout());

        label.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
        label.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        add(label, gridBagConstraints);

        button.setText(org.openide.util.NbBundle.getMessage(RowStylePanel.class, "RowStylePanel.button.text")); // NOI18N
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(button, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        Point p = button.getMousePosition();
        popupMenu.show(button, p.x, p.y);
    }//GEN-LAST:event_buttonActionPerformed

    private void backgroundColorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backgroundColorMenuItemActionPerformed
        Color newColor = JColorChooser.showDialog(this, Dict.SELECT_COLOR.toString(), mRowStyle.getBackground());
    }//GEN-LAST:event_backgroundColorMenuItemActionPerformed

    private void textColorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textColorMenuItemActionPerformed
        Color newColor = JColorChooser.showDialog(this, Dict.SELECT_COLOR.toString(), mRowStyle.getForeground());
    }//GEN-LAST:event_textColorMenuItemActionPerformed

    private void fontMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontMenuItemActionPerformed
    }//GEN-LAST:event_fontMenuItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem backgroundColorMenuItem;
    private javax.swing.JButton button;
    private javax.swing.JMenuItem fontMenuItem;
    private javax.swing.JLabel label;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JPopupMenu.Separator separator;
    private javax.swing.JMenuItem textColorMenuItem;
    // End of variables declaration//GEN-END:variables
}
