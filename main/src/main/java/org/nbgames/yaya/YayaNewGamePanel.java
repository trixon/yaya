/*
 * Copyright 2018 Patrik Karlström.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.nbgames.yaya;

import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import org.nbgames.core.api.ui.NewGamePanel;
import org.nbgames.yaya.gamedef.GameType;
import org.nbgames.yaya.gamedef.GameTypeLoader;
import org.openide.util.NbBundle;
import se.trixon.almond.util.Dict;

/**
 *
 * @author Patrik Karlström
 */
public class YayaNewGamePanel extends NewGamePanel {

    private final GameTypeLoader mGameDef = GameTypeLoader.getInstance();
    private GameType mGameType;
    private final Options mOptions = Options.getInstance();

    /**
     * Creates new form YayaNewGamePanel
     */
    public YayaNewGamePanel() {
        initComponents();

        variantLabel.setFont(gameLabel.getFont());
        selectPlayersPanel.getLabel().setFont(gameLabel.getFont());
    }

    @Override
    public void load() {
        //mGameDef.init();
        gameComboBox.setModel(new DefaultComboBoxModel(mGameDef.getTitleArray()));
        gameComboBox.setSelectedIndex(mGameDef.getIndexForId(mOptions.getGameTypeId()));
        selectPlayersPanel.setNumOfPlayers(mOptions.getNumOfPlayers());
        selectPlayersPanel.restoreSelection(getClass());
    }

    @Override
    public void save() {
        String gameTypeId = mGameDef.getIdForIndex(gameComboBox.getSelectedIndex());
        mOptions.setGameTypeId(gameTypeId);
        String variantTitle = (String) variantComboBox.getSelectedItem();
        String variantByTitle = mGameType.getVariantByTitle(variantTitle);

        mOptions.setGameVariant(gameTypeId, variantByTitle);
        mOptions.setNumOfPlayers(selectPlayersPanel.getNumOfPlayers());
        selectPlayersPanel.saveSelection(getClass());
        mOptions.setPlayers(selectPlayersPanel.getPlayers());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        gameLabel = new javax.swing.JLabel();
        gameComboBox = new javax.swing.JComboBox();
        byLineLabel = new javax.swing.JLabel();
        variantLabel = new javax.swing.JLabel();
        variantComboBox = new javax.swing.JComboBox();
        selectPlayersPanel = new org.nbgames.core.api.ui.SelectPlayersPanel();
        jPanel1 = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 8, 0, 8));
        setEnabled(false);
        setMinimumSize(new java.awt.Dimension(300, 261));
        setPreferredSize(new java.awt.Dimension(300, 377));
        setLayout(new java.awt.GridBagLayout());

        gameLabel.setFont(gameLabel.getFont().deriveFont(gameLabel.getFont().getStyle() | java.awt.Font.BOLD, gameLabel.getFont().getSize()+4));
        gameLabel.setLabelFor(gameComboBox);
        org.openide.awt.Mnemonics.setLocalizedText(gameLabel, Dict.Game.GAME.toString());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(gameLabel, gridBagConstraints);

        gameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(gameComboBox, gridBagConstraints);

        byLineLabel.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(byLineLabel, "byLine"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        add(byLineLabel, gridBagConstraints);

        variantLabel.setLabelFor(variantComboBox);
        org.openide.awt.Mnemonics.setLocalizedText(variantLabel, Dict.Game.VARIANT.toString());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        add(variantLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(variantComboBox, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(selectPlayersPanel, gridBagConstraints);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void gameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameComboBoxActionPerformed
        mGameType = mGameDef.getType(mGameDef.getIdForIndex(gameComboBox.getSelectedIndex()));
        String byLine = NbBundle.getMessage(getClass(), "ByLine", mGameType.getAuthor());
        byLineLabel.setText(byLine);
        String[] localizedVariant = mGameType.getLocalizedVariants().clone();
        Arrays.sort(localizedVariant);
        variantComboBox.setModel(new DefaultComboBoxModel(localizedVariant));
        variantComboBox.setSelectedIndex(mGameType.getLocalizedIndexForVariantId(mOptions.getGameVariant(mGameType.getId())));
    }//GEN-LAST:event_gameComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel byLineLabel;
    private javax.swing.JComboBox gameComboBox;
    private javax.swing.JLabel gameLabel;
    private javax.swing.JPanel jPanel1;
    private org.nbgames.core.api.ui.SelectPlayersPanel selectPlayersPanel;
    private javax.swing.JComboBox variantComboBox;
    private javax.swing.JLabel variantLabel;
    // End of variables declaration//GEN-END:variables
}
